// Generated by CoffeeScript 1.7.1
(function() {
  var EDE_BASE_URL, Promise, request;

  Promise = require('bluebird');

  request = Promise.promisifyAll(require('request'));

  EDE_BASE_URL = 'http://geodev.grid.unep.ch/api';

  exports.getAllVariables = function(cb) {
    return new Promise(function(resolve, reject) {
      return request.getAsync({
        url: "" + EDE_BASE_URL + "/variables",
        json: true
      }).then(function(body) {
        if (cb != null) {
          cb(null, body);
        }
        return resolve(body);
      })["catch"](function(err) {
        if (cb != null) {
          cb(err);
        }
        return reject(err);
      });
    });
  };

  exports.getVariable = function(id, cb) {
    return new Promise(function(resolve, reject) {
      return request.getAsync({
        url: "" + EDE_BASE_URL + "/variables/" + id,
        json: true
      }).then(function(body) {
        if (cb != null) {
          cb(null, body[0]);
        }
        return resolve(body[0]);
      })["catch"](function(err) {
        if (cb != null) {
          cb(err);
        }
        return reject(err);
      });
    });
  };

  exports.findVariables = function(query, cb) {
    return new Promise(function(resolve, reject) {
      return request.getAsync({
        url: "" + EDE_BASE_URL + "/variables/find/" + query,
        json: true
      }).then(function(body) {
        if (cb != null) {
          cb(null, body);
        }
        return resolve(body);
      })["catch"](function(err) {
        if (cb != null) {
          cb(err);
        }
        return reject(err);
      });
    });
  };

  exports.getDataForCountry = function(countryIso2, variableId, cb) {
    return new Promise(function(resolve, reject) {
      return request.getAsync({
        url: "" + EDE_BASE_URL + "/countries/" + countryIso2 + "/variables/" + variableId,
        json: true
      }).then(function(body) {
        if (cb != null) {
          cb(null, body);
        }
        return resolve(body);
      })["catch"](function(err) {
        if (cb != null) {
          cb(err);
        }
        return reject(err);
      });
    });
  };

}).call(this);
